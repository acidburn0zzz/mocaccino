#!/bin/bash
# Wrapper around luet geniso to accept a yaml as an input
set -e
SPEC=$1

create_iso_metadata_file () {
  local iso=$1
  local sha256=$2
  local f=$3

  echo "
iso: $iso
sha256: ${sha256}
" > $f

  return 0
}

export CA_CERTIFICATES="$(yq r $SPEC 'ca_certificate')"
export OVERLAY="$(yq r $SPEC 'overlay')"
export IMAGE_NAME="$(yq r $SPEC 'image_prefix')"
date="$(yq r $SPEC 'image_date')"

if [[ "$date" == "true" ]]; then
    export IMAGE_NAME=$IMAGE_NAME$(date +%Y%m%d).iso         
else 
    export IMAGE_NAME=$IMAGE_NAME.iso
fi

export LUET_PACKAGES="$(yq r -j $SPEC 'packages.rootfs' | jq -r '.[]' | xargs echo)"
export LUET_REPOS="$(yq r -j $SPEC 'packages.repos' | jq -r '.[]' | xargs echo)"
export FIRST_STAGE="$(yq r -j $SPEC 'packages.initramfs' | jq -r '.[]' | xargs echo)"
export ISOIMAGE_PACKAGES="$(yq r -j $SPEC 'packages.isoimage' | jq -r '.[]' | xargs echo)"
export UEFI_PACKAGES="$(yq r -j $SPEC 'packages.uefi' | jq -r '.[]' | xargs echo)"
export LUET_BIN="${LUET_BIN:-/usr/bin/luet}"
export ROOT_DIR="${ROOT_DIR:-$PWD}"
export LUET_CONFIG="$ROOT_DIR/$(yq r $SPEC 'luet.config')"

echo "Packages"
echo "--------"
echo "Rootfs: $LUET_PACKAGES"
echo "UEFI: $UEFI_PACKAGES"
echo "ISO: $ISOIMAGE_PACKAGES"
echo "Initramfs: $FIRST_STAGE"
echo "Repositories: ${LUET_REPOS}"
echo "--------"
echo
echo "Overlay: $OVERLAY"
echo "Luet: $LUET_BIN"
echo "Luet config: $LUET_CONFIG"
echo "Image name: $IMAGE_NAME"
echo "Bootstrap CA: $CA_CERTIFICATES"
luet geniso

IMAGE_SHA256=`sha256sum $IMAGE_NAME`

create_iso_metadata_file "$IMAGE_NAME" "$IMAGE_SHA256" "iso-meta.yaml"

echo $IMAGE_SHA256 > $IMAGE_NAME.sha256
