# load the config provided when evaluating the template
{{ $config := (datasource "config") }}
---
resources:
- name: daily
  type: time
  source: {interval: 24h}

jobs:
{{ range $_, $repo := $config.repositories }}
  - name: {{$repo.name}}
    serial_groups: [{{$repo.name}}]
    plan:
      - get: daily
        trigger: true
      - task: autobump
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: sabayon/base }
          params:
            GIT_AUTHOR_NAME: MarvinHatesOceans
            GIT_AUTHOR_EMAIL: github-bots@sabayon.com
            GIT_COMMITTER_NAME: MarvinHatesOceans
            GIT_COMMITTER_EMAIL: github-bots@sabayon.com
            FORK_REPO: {{$repo.fork}}
            UPSTREAM_REPO: {{$repo.upstream}}
            WORK_BRANCH: bumps
            RESET_BRANCH: {{$repo.upstream_branch}}
            AUTO_GIT: true
            LUET_NOLOCK: true
            ACCEPT_LICENSE: "*"
            HUB_ARGS: "-b {{$repo.upstream_branch}}"
            TOKEN: "((github_token))"
          run:
            path: "/bin/sh"

            args: 
            - -ce
            - |
                curl https://get.mocaccino.org/luet/get_luet_root.sh | sh
                luet install -y repository/mocaccino-extra
                luet install -y system/luet-extensions dev-util/mottainai-cli utils/jq utils/yq
                mkdir -p $HOME/.ssh
                mkdir -p $HOME/.config
                echo "((github_private_key))" > $HOME/.ssh/id_rsa
                echo "((github_public_key))" > $HOME/.ssh/id_rsa.pub
                echo "((hub_credentials))" > $HOME/.config/hub
                chmod 700 ~/.ssh
                chmod 600 ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa.pub

                ssh-keyscan github.com >> ~/.ssh/known_hosts
                equo i hub make

                git clone $FORK_REPO fork
                cd fork
                git remote add upstream $UPSTREAM_REPO
                git fetch --all
                git reset --hard upstream/${RESET_BRANCH}
                git push -fv
                echo "Removing working branch if present"
                git branch -D $WORK_BRANCH || true

                git checkout -b $WORK_BRANCH
                git reset --hard upstream/${RESET_BRANCH}
                git push -fv -u origin $WORK_BRANCH
                make autobump
{{ end }}